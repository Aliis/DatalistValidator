{"remainingRequest":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\src\\views\\Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\src\\views\\Home.vue","mtime":1554293422725},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.text {\n    color: #ddd;\n}\n.button-wrapper {\n    text-align: right;\n    width: 100%;\n}\n.buttons {\n    background: #455A70;\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <v-container grid-list-lg>\n            <v-layout row wrap>\n                <!--<v-flex xs12 v-if=\"errorMsg\">-->\n                    <!--<v-card color=\"blue-grey darken-2\">-->\n                        <!--<v-card-text  class=\"text\">-->\n                            <!--<p>{{ errorMsg }}</p>-->\n                        <!--</v-card-text>-->\n                        <!--<v-card-actions class=\"buttons\">-->\n                            <!--<div class=\"button-wrapper\"><v-btn @click=\"getFeed\" flat color=\"orange\">Lae uuesti</v-btn></div>-->\n                        <!--</v-card-actions>-->\n                    <!--</v-card>-->\n                <!--</v-flex>-->\n                <v-flex xs12  v-for=\"item in feedItems\">\n                    <v-card color=\"blue-grey darken-2\">\n                        <v-card-title class=\"text\">\n                            <div class=\"headline\">{{ item.filename }}</div>\n                        </v-card-title>\n                        <v-card-text  class=\"text\">\n                            <div>{{ item.hash }}</div>\n                            <div>{{ item.id}}</div>\n                            <div>{{item.checksum}}</div>\n                            <div>{{item.schema}}</div>\n                            <div>{{item.signature}}</div>\n                        </v-card-text>\n                        <v-card-actions class=\"buttons\">\n                            <div class=\"button-wrapper\" @click=\"validateSingleDoc(item.id)\"><v-btn\n                                    flat color=\"orange\">Validate</v-btn></div>\n                        </v-card-actions>\n                    </v-card>\n                </v-flex>\n            </v-layout>\n        </v-container>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    export default {\n        data() {\n            return {\n                feedItems: [],\n                errorMsg: '',\n                feedCounter: 10,\n                page: 1,\n                checksumIsValid: null,\n                schemaIsValid: null,\n                signatureIsValid: null,\n                url: 'http://fe-test.guardtime.com/documents',\n            }\n        },\n        methods: {\n            getFeed() {\n                axios.get(this.url + '?perPage=50&page=' + this.page)\n                    .then((res) => {\n                            this.feedItems = this.feedItems.concat(res.data.data);\n                    })\n                    .catch((error) => {\n                        // this.page+=1;\n                        // this.getFeed()\n                        // this.feedCounter+=10;\n                })\n            },\n            validateSingleDoc(id) {\n                this.checkIfValid(id);\n\n                let feedObjectById = what => this.feedItems.find(element => element.id === what);\n                if(feedObjectById(id)) {\n                    this.$set(feedObjectById(id), 'checksum',  this.checksumIsValid);\n                    this.$set(feedObjectById(id), 'schema',  this.schemaIsValid);\n                    this.$set(feedObjectById(id), 'signature',  this.signatureIsValid);\n                }\n            },\n            async checkIfValid(id) {\n                let modes = ['validateChecksum', 'validateSchema', 'validateSignature'];\n                let gotFalse = false;\n\n                for(let i = 0; i < modes.length; i++) {\n                    await axios.post(this.url + '/'+ id + '/' + modes[i])\n                        .then((res) => {\n                            if (!res.data.valid) {\n                               gotFalse = true\n                            }\n                            if (i === 0) {\n                                this.checksumIsValid = res.data.valid\n                                console.log('here 1', this.checksumIsValid)\n                            }\n                            else if (i === 1) {\n                                this.schemaIsValid = res.data.valid\n                                console.log('here 2', this.schemaIsValid)\n                            }\n                            else {\n                                this.signatureIsValid = res.data.valid\n                                console.log('here 3', this.signatureIsValid)\n                            }\n                        })\n                    if (gotFalse === true) {\n                        break;\n                    }\n                    gotFalse = false\n                }\n            },\n            infiniteScroll() {\n                window.onscroll = () => {\n                    let bottomOfWindow = document.documentElement.scrollTop + window.innerHeight === document.documentElement.offsetHeight;\n\n                    if (bottomOfWindow) {\n                        this.page+=1;\n                        this.getFeed()\n                        this.feedCounter+=10;\n                    }\n                };\n\n            }\n    },\n    created() {\n        this.getFeed();\n    },\n    mounted() {\n        this.infiniteScroll();\n    }\n};\n</script>\n<style>\n    .text {\n        color: #ddd;\n    }\n    .button-wrapper {\n        text-align: right;\n        width: 100%;\n    }\n    .buttons {\n        background: #455A70;\n    }\n</style>\n"]}]}