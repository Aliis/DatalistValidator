{"remainingRequest":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\src\\views\\Home.vue","mtime":1554915177749},{"path":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import axios from 'axios'\n    import card from '../components/Card.vue'\n    export default {\n        data() {\n            return {\n                dataLoadingError: '',\n                dataCounter: 5,\n                perPage: 5,\n                page: 1,\n                url: 'http://fe-test.guardtime.com/documents',\n                alert: true,\n                showDataLoader: false,\n                startIndex: 0\n            }\n        },\n        components: {'card': card},\n        methods: {\n            showData(state) {\n                this.showDataLoader = true\n                this.dataLoadingError = '';\n                // Reload button appears, if data not loaded after 3 sec.\n                // Speeds up testing, should be used in dev mode only.\n                setTimeout(this.error504Handling, 3000);\n\n                axios.get(this.url + '?perPage=' + this.perPage + '&page=' + this.page)\n                .then((res) => {\n                    this.showDataLoader = false\n                    this.$store.state.dataItems = this.$store.state.dataItems.concat(res.data.data);\n                })\n                .catch((error) => {\n                    if (state === true)  {\n                        this.showDataLoader = false\n                        this.showData(false)\n                        console.log(error.response.data.error.code)\n                    }\n                })\n            },\n            infiniteScroll() {\n                window.onscroll = () => {\n                    let bottomOfWindow = (window.innerHeight + Math.ceil(window.pageYOffset)) >=\n                        document.body.offsetHeight;\n\n                    if (bottomOfWindow) {\n                        this.page+=1;\n                        this.showData(true)\n                        this.dataCounter+=this.perPage;\n                    }\n                };\n            },\n            error504Handling() {\n                this.showDataLoader = false\n                if (this.$store.state.dataItems.length < 1) {\n                    this.dataLoadingError = 'Service unavailable, please reload'\n                }\n            },\n            validateAllDocs() {\n                let that = this,\n                    perIteration = 5;\n\n                this.$store.state.dataItems.slice(that.startIndex, that.startIndex + perIteration)\n                    .forEach(function(item) {\n                        that.$refs.cardComponent.validateSingleDoc(item.id);\n                });\n\n                that.startIndex += perIteration;\n                if (this.$store.state.dataItems.length > that.startIndex) {\n                    setTimeout(that.$refs.cardComponent.validateAllDocs, 5500);\n                } else {\n                    that.startIndex = 0;\n                }\n            }\n    },\n    created() {\n        this.showData(true);\n    },\n    mounted() {\n        this.infiniteScroll();\n    }\n};\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <v-container grid-list-lg>\n            <v-layout row wrap>\n                <div v-if=\"dataLoadingError\" class=\"full-width\">\n                    <v-flex xs12>\n                        <v-card color=\"blue-grey darken-2\">\n                            <v-card-text  class=\"text\">\n                                <p>{{ dataLoadingError }}</p>\n                            </v-card-text>\n                            <v-card-actions class=\"buttons\">\n                                <div class=\"button-wrapper\"><v-btn @click=\"showData(true)\" flat color=\"orange\">Reload\n                                </v-btn></div>\n                            </v-card-actions>\n                        </v-card>\n                    </v-flex>\n                </div>\n                <div v-else class=\"full-width\">\n                    <v-flex xs-12 v-if=\"!showDataLoader\" class=\"button-wrapper\">\n                        <div><v-btn @click=\"validateAllDocs\" flat color=\"lime\">Validate all documents</v-btn></div>\n                    </v-flex>\n                    <card ref=\"cardComponent\"></card>\n                    <v-flex style=\"text-align: center\" v-if=\"showDataLoader\">\n                        <div><v-icon>fas fa-circle-notch fa-spin</v-icon></div>\n                    </v-flex>\n                </div>\n            </v-layout>\n        </v-container>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import card from '../components/Card.vue'\n    export default {\n        data() {\n            return {\n                dataLoadingError: '',\n                dataCounter: 5,\n                perPage: 5,\n                page: 1,\n                url: 'http://fe-test.guardtime.com/documents',\n                alert: true,\n                showDataLoader: false,\n                startIndex: 0\n            }\n        },\n        components: {'card': card},\n        methods: {\n            showData(state) {\n                this.showDataLoader = true\n                this.dataLoadingError = '';\n                // Reload button appears, if data not loaded after 3 sec.\n                // Speeds up testing, should be used in dev mode only.\n                setTimeout(this.error504Handling, 3000);\n\n                axios.get(this.url + '?perPage=' + this.perPage + '&page=' + this.page)\n                .then((res) => {\n                    this.showDataLoader = false\n                    this.$store.state.dataItems = this.$store.state.dataItems.concat(res.data.data);\n                })\n                .catch((error) => {\n                    if (state === true)  {\n                        this.showDataLoader = false\n                        this.showData(false)\n                        console.log(error.response.data.error.code)\n                    }\n                })\n            },\n            infiniteScroll() {\n                window.onscroll = () => {\n                    let bottomOfWindow = (window.innerHeight + Math.ceil(window.pageYOffset)) >=\n                        document.body.offsetHeight;\n\n                    if (bottomOfWindow) {\n                        this.page+=1;\n                        this.showData(true)\n                        this.dataCounter+=this.perPage;\n                    }\n                };\n            },\n            error504Handling() {\n                this.showDataLoader = false\n                if (this.$store.state.dataItems.length < 1) {\n                    this.dataLoadingError = 'Service unavailable, please reload'\n                }\n            },\n            validateAllDocs() {\n                let that = this,\n                    perIteration = 5;\n\n                this.$store.state.dataItems.slice(that.startIndex, that.startIndex + perIteration)\n                    .forEach(function(item) {\n                        that.$refs.cardComponent.validateSingleDoc(item.id);\n                });\n\n                that.startIndex += perIteration;\n                if (this.$store.state.dataItems.length > that.startIndex) {\n                    setTimeout(that.$refs.cardComponent.validateAllDocs, 5500);\n                } else {\n                    that.startIndex = 0;\n                }\n            }\n    },\n    created() {\n        this.showData(true);\n    },\n    mounted() {\n        this.infiniteScroll();\n    }\n};\n</script>\n<style>\n    .full-width {\n        width: 100%;;\n    }\n    .text {\n        color: #ddd;\n    }\n    .button-wrapper {\n        text-align: right;\n        width: 100%;\n    }\n    .buttons {\n        background: #455A70;\n    }\n    .v-card__text {\n        flex-wrap: wrap;\n    }\n    .flex .fa-check-circle {\n        color: lime!important;\n    }\n    .flex .fa-times-circle  {\n        color: orangered !important;\n    }\n    .fa-circle-notch {\n        color: cyan!important;\n    }\n</style>\n"]}]}