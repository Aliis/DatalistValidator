{"remainingRequest":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\src\\views\\Home.vue","mtime":1554915177749},{"path":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\DatalistValidator\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport card from '../components/Card.vue';\nexport default {\n  data: function data() {\n    return {\n      dataLoadingError: '',\n      dataCounter: 5,\n      perPage: 5,\n      page: 1,\n      url: 'http://fe-test.guardtime.com/documents',\n      alert: true,\n      showDataLoader: false,\n      startIndex: 0\n    };\n  },\n  components: {\n    'card': card\n  },\n  methods: {\n    showData: function showData(state) {\n      var _this = this;\n\n      this.showDataLoader = true;\n      this.dataLoadingError = ''; // Reload button appears, if data not loaded after 3 sec.\n      // Speeds up testing, should be used in dev mode only.\n\n      setTimeout(this.error504Handling, 3000);\n      axios.get(this.url + '?perPage=' + this.perPage + '&page=' + this.page).then(function (res) {\n        _this.showDataLoader = false;\n        _this.$store.state.dataItems = _this.$store.state.dataItems.concat(res.data.data);\n      }).catch(function (error) {\n        if (state === true) {\n          _this.showDataLoader = false;\n\n          _this.showData(false);\n\n          console.log(error.response.data.error.code);\n        }\n      });\n    },\n    infiniteScroll: function infiniteScroll() {\n      var _this2 = this;\n\n      window.onscroll = function () {\n        var bottomOfWindow = window.innerHeight + Math.ceil(window.pageYOffset) >= document.body.offsetHeight;\n\n        if (bottomOfWindow) {\n          _this2.page += 1;\n\n          _this2.showData(true);\n\n          _this2.dataCounter += _this2.perPage;\n        }\n      };\n    },\n    error504Handling: function error504Handling() {\n      this.showDataLoader = false;\n\n      if (this.$store.state.dataItems.length < 1) {\n        this.dataLoadingError = 'Service unavailable, please reload';\n      }\n    },\n    validateAllDocs: function validateAllDocs() {\n      var that = this,\n          perIteration = 5;\n      this.$store.state.dataItems.slice(that.startIndex, that.startIndex + perIteration).forEach(function (item) {\n        that.$refs.cardComponent.validateSingleDoc(item.id);\n      });\n      that.startIndex += perIteration;\n\n      if (this.$store.state.dataItems.length > that.startIndex) {\n        setTimeout(that.$refs.cardComponent.validateAllDocs, 5500);\n      } else {\n        that.startIndex = 0;\n      }\n    }\n  },\n  created: function created() {\n    this.showData(true);\n  },\n  mounted: function mounted() {\n    this.infiniteScroll();\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,IAAA,MAAA,wBAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,CAFA;AAGA,MAAA,OAAA,EAAA,CAHA;AAIA,MAAA,IAAA,EAAA,CAJA;AAKA,MAAA,GAAA,EAAA,wCALA;AAMA,MAAA,KAAA,EAAA,IANA;AAOA,MAAA,cAAA,EAAA,KAPA;AAQA,MAAA,UAAA,EAAA;AARA,KAAA;AAUA,GAZA;AAaA,EAAA,UAAA,EAAA;AAAA,YAAA;AAAA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,KADA,EACA;AAAA;;AACA,WAAA,cAAA,GAAA,IAAA;AACA,WAAA,gBAAA,GAAA,EAAA,CAFA,CAGA;AACA;;AACA,MAAA,UAAA,CAAA,KAAA,gBAAA,EAAA,IAAA,CAAA;AAEA,MAAA,KAAA,CAAA,GAAA,CAAA,KAAA,GAAA,GAAA,WAAA,GAAA,KAAA,OAAA,GAAA,QAAA,GAAA,KAAA,IAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,cAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,KAAA,IAAA,EAAA;AACA,UAAA,KAAA,CAAA,cAAA,GAAA,KAAA;;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,KAAA;;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA;AACA;AACA,OAXA;AAYA,KApBA;AAqBA,IAAA,cArBA,4BAqBA;AAAA;;AACA,MAAA,MAAA,CAAA,QAAA,GAAA,YAAA;AACA,YAAA,cAAA,GAAA,MAAA,CAAA,WAAA,GAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,WAAA,CAAA,IACA,QAAA,CAAA,IAAA,CAAA,YADA;;AAGA,YAAA,cAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,IAAA,CAAA;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,IAAA;;AACA,UAAA,MAAA,CAAA,WAAA,IAAA,MAAA,CAAA,OAAA;AACA;AACA,OATA;AAUA,KAhCA;AAiCA,IAAA,gBAjCA,8BAiCA;AACA,WAAA,cAAA,GAAA,KAAA;;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,gBAAA,GAAA,oCAAA;AACA;AACA,KAtCA;AAuCA,IAAA,eAvCA,6BAuCA;AACA,UAAA,IAAA,GAAA,IAAA;AAAA,UACA,YAAA,GAAA,CADA;AAGA,WAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,UAAA,GAAA,YAAA,EACA,OADA,CACA,UAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,EAAA;AACA,OAHA;AAKA,MAAA,IAAA,CAAA,UAAA,IAAA,YAAA;;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,MAAA,GAAA,IAAA,CAAA,UAAA,EAAA;AACA,QAAA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA,IAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,IAAA,CAAA,UAAA,GAAA,CAAA;AACA;AACA;AAtDA,GAdA;AAsEA,EAAA,OAtEA,qBAsEA;AACA,SAAA,QAAA,CAAA,IAAA;AACA,GAxEA;AAyEA,EAAA,OAzEA,qBAyEA;AACA,SAAA,cAAA;AACA;AA3EA,CAAA","sourcesContent":["<template>\n    <div>\n        <v-container grid-list-lg>\n            <v-layout row wrap>\n                <div v-if=\"dataLoadingError\" class=\"full-width\">\n                    <v-flex xs12>\n                        <v-card color=\"blue-grey darken-2\">\n                            <v-card-text  class=\"text\">\n                                <p>{{ dataLoadingError }}</p>\n                            </v-card-text>\n                            <v-card-actions class=\"buttons\">\n                                <div class=\"button-wrapper\"><v-btn @click=\"showData(true)\" flat color=\"orange\">Reload\n                                </v-btn></div>\n                            </v-card-actions>\n                        </v-card>\n                    </v-flex>\n                </div>\n                <div v-else class=\"full-width\">\n                    <v-flex xs-12 v-if=\"!showDataLoader\" class=\"button-wrapper\">\n                        <div><v-btn @click=\"validateAllDocs\" flat color=\"lime\">Validate all documents</v-btn></div>\n                    </v-flex>\n                    <card ref=\"cardComponent\"></card>\n                    <v-flex style=\"text-align: center\" v-if=\"showDataLoader\">\n                        <div><v-icon>fas fa-circle-notch fa-spin</v-icon></div>\n                    </v-flex>\n                </div>\n            </v-layout>\n        </v-container>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import card from '../components/Card.vue'\n    export default {\n        data() {\n            return {\n                dataLoadingError: '',\n                dataCounter: 5,\n                perPage: 5,\n                page: 1,\n                url: 'http://fe-test.guardtime.com/documents',\n                alert: true,\n                showDataLoader: false,\n                startIndex: 0\n            }\n        },\n        components: {'card': card},\n        methods: {\n            showData(state) {\n                this.showDataLoader = true\n                this.dataLoadingError = '';\n                // Reload button appears, if data not loaded after 3 sec.\n                // Speeds up testing, should be used in dev mode only.\n                setTimeout(this.error504Handling, 3000);\n\n                axios.get(this.url + '?perPage=' + this.perPage + '&page=' + this.page)\n                .then((res) => {\n                    this.showDataLoader = false\n                    this.$store.state.dataItems = this.$store.state.dataItems.concat(res.data.data);\n                })\n                .catch((error) => {\n                    if (state === true)  {\n                        this.showDataLoader = false\n                        this.showData(false)\n                        console.log(error.response.data.error.code)\n                    }\n                })\n            },\n            infiniteScroll() {\n                window.onscroll = () => {\n                    let bottomOfWindow = (window.innerHeight + Math.ceil(window.pageYOffset)) >=\n                        document.body.offsetHeight;\n\n                    if (bottomOfWindow) {\n                        this.page+=1;\n                        this.showData(true)\n                        this.dataCounter+=this.perPage;\n                    }\n                };\n            },\n            error504Handling() {\n                this.showDataLoader = false\n                if (this.$store.state.dataItems.length < 1) {\n                    this.dataLoadingError = 'Service unavailable, please reload'\n                }\n            },\n            validateAllDocs() {\n                let that = this,\n                    perIteration = 5;\n\n                this.$store.state.dataItems.slice(that.startIndex, that.startIndex + perIteration)\n                    .forEach(function(item) {\n                        that.$refs.cardComponent.validateSingleDoc(item.id);\n                });\n\n                that.startIndex += perIteration;\n                if (this.$store.state.dataItems.length > that.startIndex) {\n                    setTimeout(that.$refs.cardComponent.validateAllDocs, 5500);\n                } else {\n                    that.startIndex = 0;\n                }\n            }\n    },\n    created() {\n        this.showData(true);\n    },\n    mounted() {\n        this.infiniteScroll();\n    }\n};\n</script>\n<style>\n    .full-width {\n        width: 100%;;\n    }\n    .text {\n        color: #ddd;\n    }\n    .button-wrapper {\n        text-align: right;\n        width: 100%;\n    }\n    .buttons {\n        background: #455A70;\n    }\n    .v-card__text {\n        flex-wrap: wrap;\n    }\n    .flex .fa-check-circle {\n        color: lime!important;\n    }\n    .flex .fa-times-circle  {\n        color: orangered !important;\n    }\n    .fa-circle-notch {\n        color: cyan!important;\n    }\n</style>\n"],"sourceRoot":"src/views"}]}