{"remainingRequest":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\src\\views\\Home.vue","mtime":1554403431426},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\aliiski\\\\Desktop\\\\work\\\\RSSReader-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      feedItems: [],\n      feedLodingError: '',\n      feedCounter: 10,\n      page: 1,\n      url: 'http://fe-test.guardtime.com/documents',\n      docValid: true,\n      alert: true\n    };\n  },\n  methods: {\n    getFeed: function getFeed() {\n      var _this = this;\n\n      this.feedLodingError = '';\n      axios.get(this.url + '?perPage=50&page=' + this.page).then(function (res) {\n        _this.feedItems = _this.feedItems.concat(res.data.data);\n      }).catch(function () {\n        _this.feedLodingError = 'Service unavailable.';\n      });\n      console.log(setTimeout(this.checkFeedItems, 1000));\n    },\n    checkFeedItems: function checkFeedItems() {\n      return this.feedItems.length < 1;\n    },\n    validateSingleDoc: function () {\n      var _validateSingleDoc = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(id) {\n        var _this2 = this;\n\n        var modes, gotFalseFromResponse, feedObjectById, docValid, error, _loop, i, _ret;\n\n        return regeneratorRuntime.wrap(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                modes = ['validateChecksum', 'validateSchema', 'validateSignature'];\n                gotFalseFromResponse = false;\n\n                feedObjectById = function feedObjectById(what) {\n                  return _this2.feedItems.find(function (element) {\n                    return element.id === what;\n                  });\n                };\n\n                docValid = true;\n                error = false;\n\n                if (!feedObjectById(id)) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                this.$set(feedObjectById(id), 'checksum', '');\n                this.$set(feedObjectById(id), 'schema', '');\n                this.$set(feedObjectById(id), 'signature', '');\n                this.$set(feedObjectById(id), 'validationError', false);\n                _loop =\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _loop(i) {\n                  return regeneratorRuntime.wrap(function _loop$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return axios.post(_this2.url + '/' + id + '/' + modes[i]).then(function (res) {\n                            if (!res.data.valid) {\n                              gotFalseFromResponse = true;\n                            }\n\n                            if (i === 0) {\n                              _this2.$set(feedObjectById(id), 'checksum', res.data.valid);\n\n                              console.log('here 1', modes[i], res.data.valid);\n                            } else if (i === 1) {\n                              _this2.$set(feedObjectById(id), 'schema', res.data.valid);\n\n                              console.log('here 2', modes[i], res.data.valid);\n                            } else {\n                              _this2.$set(feedObjectById(id), 'signature', res.data.valid);\n\n                              console.log('here 3', modes[i], res.data.valid);\n                            }\n                          }).catch(function () {\n                            error = true;\n\n                            _this2.$set(feedObjectById(id), 'validationError', true);\n                          });\n\n                        case 2:\n                          if (!(gotFalseFromResponse === true)) {\n                            _context.next = 5;\n                            break;\n                          }\n\n                          docValid = false;\n                          return _context.abrupt(\"return\", \"break\");\n\n                        case 5:\n                          gotFalseFromResponse = false;\n\n                        case 6:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _loop, this);\n                });\n                i = 0;\n\n              case 12:\n                if (!(i < modes.length)) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                return _context2.delegateYield(_loop(i), \"t0\", 14);\n\n              case 14:\n                _ret = _context2.t0;\n\n                if (!(_ret === \"break\")) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                return _context2.abrupt(\"break\", 20);\n\n              case 17:\n                i++;\n                _context2.next = 12;\n                break;\n\n              case 20:\n                if (docValid && !error) {\n                  this.$set(feedObjectById(id), 'valid', 'valid');\n                } else if (error) {\n                  this.$set(feedObjectById(id), 'valid', '');\n                  this.$set(feedObjectById(id), 'checksum', '');\n                  this.$set(feedObjectById(id), 'schema', '');\n                  this.$set(feedObjectById(id), 'signature', '');\n                } else {\n                  this.$set(feedObjectById(id), 'valid', 'notvalid');\n                }\n\n              case 21:\n                docValid = true;\n                error = false;\n\n              case 23:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function validateSingleDoc(_x) {\n        return _validateSingleDoc.apply(this, arguments);\n      }\n\n      return validateSingleDoc;\n    }(),\n    infiniteScroll: function infiniteScroll() {\n      var _this3 = this;\n\n      window.onscroll = function () {\n        var bottomOfWindow = document.documentElement.scrollTop + window.innerHeight === document.documentElement.offsetHeight;\n\n        if (bottomOfWindow) {\n          _this3.page += 1;\n\n          _this3.getFeed();\n\n          _this3.feedCounter += 10;\n        }\n      };\n    }\n  },\n  created: function created() {\n    this.getFeed();\n  },\n  mounted: function mounted() {\n    this.infiniteScroll();\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <v-container grid-list-lg>\n            <v-layout row wrap>\n                <v-flex xs12 v-if=\"feedLodingError\">\n                    <v-card color=\"blue-grey darken-2\">\n                        <v-card-text  class=\"text\">\n                            <p>{{ feedLodingError }}</p>\n                        </v-card-text>\n                        <v-card-actions class=\"buttons\">\n                            <div class=\"button-wrapper\"><v-btn @click=\"getFeed\" flat color=\"orange\">Reload\n                            </v-btn></div>\n                        </v-card-actions>\n                    </v-card>\n                </v-flex>\n                <v-flex xs12 v-else  v-for=\"item in feedItems\">\n                    <v-card color=\"blue-grey darken-2\">\n                        <v-card-title class=\"text\">\n                            <v-flex xs11>\n                                <div class=\"headline\">{{ item.filename }}</div>\n                            </v-flex>\n                            <v-flex xs1 style=\"text-align: right;\">\n                                <div v-if=\"item.valid === 'valid'\"><v-icon>far fa-check-circle</v-icon></div>\n                                <div v-if=\"item.valid === 'notvalid'\"><v-icon>far exclamation-circle</v-icon></div>\n                            </v-flex>\n                        </v-card-title>\n                        <v-card-text  class=\"text\">\n                                <div>{{ item.hash }}</div>\n                                <div>{{ item.id}}</div><br>\n                                <div>Checksum {{item.checksum}}</div>\n                                <div>Schema {{item.schema}}</div>\n                                <div>Signature {{item.signature}}</div>\n\n                            <v-alert\n                                     :value=\"true\"\n                                     v-model=\"item.validationError\"\n                                     dismissible\n                                     type=\"error\"\n                            >Validation failed, please revalidate\n                            </v-alert>\n                        </v-card-text>\n                        <v-card-actions class=\"buttons\">\n                            <div class=\"button-wrapper\"><v-btn @click=\"validateSingleDoc(item.id)\"\n                                    flat color=\"orange\">Validate</v-btn></div>\n                        </v-card-actions>\n                    </v-card>\n                </v-flex>\n            </v-layout>\n        </v-container>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    export default {\n        data() {\n            return {\n                feedItems: [],\n                feedLodingError: '',\n                feedCounter: 10,\n                page: 1,\n                url: 'http://fe-test.guardtime.com/documents',\n                docValid: true,\n                alert: true\n            }\n        },\n        methods: {\n            getFeed() {\n                this.feedLodingError = '';\n                axios.get(this.url + '?perPage=50&page=' + this.page)\n                .then((res) => {\n                    this.feedItems = this.feedItems.concat(res.data.data);\n                })\n                .catch(() => {\n                    this.feedLodingError = 'Service unavailable.'\n                })\n\n                console.log(setTimeout(this.checkFeedItems, 1000))\n            },\n            checkFeedItems() {\n                return this.feedItems.length < 1;\n            },\n            async validateSingleDoc(id) {\n                let modes = ['validateChecksum', 'validateSchema', 'validateSignature'];\n                let gotFalseFromResponse = false;\n                let feedObjectById = what => this.feedItems.find(element => element.id === what);\n                let docValid = true\n                let error = false\n\n                if(feedObjectById(id)) {\n                    this.$set(feedObjectById(id), 'checksum',  '');\n                    this.$set(feedObjectById(id), 'schema',  '');\n                    this.$set(feedObjectById(id), 'signature',  '');\n                    this.$set(feedObjectById(id), 'validationError',  false);\n\n                    for(let i = 0; i < modes.length; i++) {\n                        await axios.post(this.url + '/'+ id + '/' + modes[i])\n                            .then((res) => {\n                                if (!res.data.valid) {\n                                    gotFalseFromResponse = true\n                                }\n                                if (i === 0) {\n                                    this.$set(feedObjectById(id), 'checksum',  res.data.valid);\n                                    console.log('here 1', modes[i], res.data.valid)\n                                }\n                                else if (i === 1) {\n                                    this.$set(feedObjectById(id), 'schema',  res.data.valid);\n                                    console.log('here 2', modes[i], res.data.valid)\n                                }\n                                else {\n                                    this.$set(feedObjectById(id), 'signature',  res.data.valid);\n                                    console.log('here 3', modes[i], res.data.valid)\n                                }\n                            })\n                            .catch(() => {\n                                error = true\n                                this.$set(feedObjectById(id), 'validationError',  true);\n                            })\n                        if (gotFalseFromResponse === true) {\n                            docValid = false\n                            break;\n                        }\n                        gotFalseFromResponse = false\n                    }\n                    if(docValid && !error) {\n                        this.$set(feedObjectById(id), 'valid',  'valid');\n                    }\n                    else if (error) {\n                        this.$set(feedObjectById(id), 'valid',  '');\n                        this.$set(feedObjectById(id), 'checksum',  '');\n                        this.$set(feedObjectById(id), 'schema',  '');\n                        this.$set(feedObjectById(id), 'signature',  '');\n                    }\n                    else {\n                        this.$set(feedObjectById(id), 'valid',  'notvalid');\n                    }\n                }\n                docValid = true\n                error = false\n            },\n            infiniteScroll() {\n                window.onscroll = () => {\n                    let bottomOfWindow = document.documentElement.scrollTop + window.innerHeight === document.documentElement.offsetHeight;\n\n                    if (bottomOfWindow) {\n                        this.page+=1;\n                        this.getFeed()\n                        this.feedCounter+=10;\n                    }\n                };\n\n            }\n    },\n    created() {\n        this.getFeed();\n    },\n    mounted() {\n        this.infiniteScroll();\n    }\n};\n</script>\n<style>\n    .text {\n        color: #ddd;\n    }\n    .button-wrapper {\n        text-align: right;\n        width: 100%;\n    }\n    .buttons {\n        background: #455A70;\n    }\n    .v-card__text {\n        flex-wrap: wrap;\n    }\n    .flex .fa-check-circle {\n        font-size: 34px!important;\n        color: limegreen!important;\n    }\n    .flex .fa-times-circle {\n        font-size: 34px!important;\n        color: orangered !important;\n    }\n</style>\n"],"sourceRoot":"src/views"}]}