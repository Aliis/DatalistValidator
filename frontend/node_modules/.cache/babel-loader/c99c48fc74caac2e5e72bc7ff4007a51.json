{"remainingRequest":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\src\\views\\Home.vue","mtime":1554585366962},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aliiski\\Desktop\\work\\RSSReader-master\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\aliiski\\\\Desktop\\\\work\\\\RSSReader-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      feedItems: [],\n      feedLoadingError: '',\n      feedCounter: 5,\n      page: 1,\n      url: 'http://fe-test.guardtime.com/documents',\n      alert: true,\n      id: '',\n      showLoader: false\n    };\n  },\n  methods: {\n    getFeed: function getFeed(state) {\n      var _this = this;\n\n      this.feedLoadingError = ''; // error msg will appear, if feed not loaded after 3 sec\n\n      setTimeout(this.feedErrorHandling, 3000);\n      this.showLoader = true;\n      axios.get(this.url + '?perPage=5&page=' + this.page).then(function (res) {\n        _this.showLoader = false;\n        _this.feedItems = _this.feedItems.concat(res.data.data);\n      }).catch(function (error) {\n        if (state === true) {\n          _this.showLoader = false;\n          console.log(error.response.data.error.code);\n\n          _this.getFeed(false);\n        }\n      });\n    },\n    validateSingleDoc: function () {\n      var _validateSingleDoc = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(id) {\n        var _this2 = this;\n\n        var modes, feedObjectById, _loop, i, _ret;\n\n        return regeneratorRuntime.wrap(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"Start:\" + id + \" ********************** \" + new Date());\n                this.id = id;\n                modes = ['validateChecksum', 'validateSchema', 'validateSignature'];\n\n                feedObjectById = function feedObjectById(what) {\n                  return _this2.feedItems.find(function (element) {\n                    return element.id === what;\n                  });\n                };\n\n                if (!feedObjectById(id)) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                this.resetValidationValues(feedObjectById(id));\n                this.$set(feedObjectById(id), 'gotFalseFromResponse', false);\n                this.$set(feedObjectById(id), 'docValid', true);\n                this.$set(feedObjectById(id), 'validationError', false);\n                _loop =\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _loop(i) {\n                  return regeneratorRuntime.wrap(function _loop$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _this2.$set(feedObjectById(id), 'valid', 'loading');\n\n                          _context.next = 3;\n                          return axios.post(_this2.url + '/' + id + '/' + modes[i]).then(function (res) {\n                            if (!res.data.valid) {\n                              _this2.$set(feedObjectById(id), 'gotFalseFromResponse', true);\n                            }\n\n                            if (i === 'validateChecksum') {\n                              _this2.$set(feedObjectById(id), 'checksum', res.data.valid);\n                            } else if (i === 'validateSchema') {\n                              _this2.$set(feedObjectById(id), 'schema', res.data.valid);\n                            } else {\n                              _this2.$set(feedObjectById(id), 'signature', res.data.valid);\n                            }\n                          }).catch(function (error) {\n                            console.log(error.response.data.error.code);\n\n                            _this2.$set(feedObjectById(id), 'validationError', true);\n                          });\n\n                        case 3:\n                          if (!feedObjectById(id).gotFalseFromResponse) {\n                            _context.next = 6;\n                            break;\n                          }\n\n                          _this2.$set(feedObjectById(id), 'docValid', false);\n\n                          return _context.abrupt(\"return\", \"break\");\n\n                        case 6:\n                          if (!feedObjectById(id).validationError) {\n                            _context.next = 8;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", \"break\");\n\n                        case 8:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _loop, this);\n                });\n                i = 0;\n\n              case 11:\n                if (!(i < modes.length)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                return _context2.delegateYield(_loop(i), \"t0\", 13);\n\n              case 13:\n                _ret = _context2.t0;\n\n                if (!(_ret === \"break\")) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                return _context2.abrupt(\"break\", 19);\n\n              case 16:\n                i++;\n                _context2.next = 11;\n                break;\n\n              case 19:\n                if (feedObjectById(id).docValid) {\n                  this.$set(feedObjectById(id), 'valid', 'valid');\n                } else if (!feedObjectById(id).docValid) {\n                  this.$set(feedObjectById(id), 'valid', 'notvalid');\n                } else {\n                  this.resetValidationValues(feedObjectById(id));\n                }\n\n              case 20:\n                console.log(\"End:\" + id + \" ********************** \" + new Date());\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function validateSingleDoc(_x) {\n        return _validateSingleDoc.apply(this, arguments);\n      }\n\n      return validateSingleDoc;\n    }(),\n    infiniteScroll: function infiniteScroll() {\n      var _this3 = this;\n\n      window.onscroll = function () {\n        var bottomOfWindow = document.documentElement.scrollTop + window.innerHeight === document.documentElement.offsetHeight;\n\n        if (bottomOfWindow) {\n          _this3.page += 1;\n\n          _this3.getFeed(true);\n\n          _this3.feedCounter += 5;\n        }\n      };\n    },\n    feedErrorHandling: function feedErrorHandling() {\n      this.showLoader = false;\n\n      if (this.feedItems.length < 1) {\n        this.feedLoadingError = 'Service unavailable.';\n      }\n    },\n    validateAllDocs: function validateAllDocs() {\n      var that = this;\n      this.feedItems.forEach(function (item) {\n        that.validateSingleDoc(item.id);\n      });\n    },\n    resetValidationValues: function resetValidationValues(obj) {\n      this.$set(obj, 'checksum', '');\n      this.$set(obj, 'schema', '');\n      this.$set(obj, 'signature', '');\n      this.$set(obj, 'valid', '');\n    }\n  },\n  created: function created() {\n    this.getFeed(true);\n  },\n  mounted: function mounted() {\n    this.infiniteScroll();\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <v-container grid-list-lg>\n            <v-layout row wrap>\n                <v-flex xs-12 v-if=\"!feedLoadingError\" class=\"button-wrapper\">\n                    <div><v-btn @click=\"validateAllDocs\"\n                                                       flat color=\"lime\">Validate all documents</v-btn></div>\n                </v-flex>\n                <v-flex xs12 v-if=\"feedLoadingError\">\n                    <v-card color=\"blue-grey darken-2\">\n                        <v-card-text  class=\"text\">\n                            <p>{{ feedLoadingError }}</p>\n                        </v-card-text>\n                        <v-card-actions class=\"buttons\">\n                            <div class=\"button-wrapper\"><v-btn @click=\"getFeed\" flat color=\"orange\">Reload\n                            </v-btn></div>\n                        </v-card-actions>\n                    </v-card>\n                </v-flex>\n                <v-flex xs12 v-else  v-for=\"item in feedItems\">\n                    <v-card color=\"blue-grey darken-2\">\n                        <v-card-title class=\"text\">\n                            <v-flex xs11>\n                                <div class=\"headline\">{{ item.filename }}</div>\n                            </v-flex>\n                            <v-flex xs1 style=\"text-align: right;\">\n                                <div v-if=\"item.valid === 'valid'\"><v-icon>far fa-check-circle</v-icon></div>\n                                <div v-if=\"item.valid === 'notvalid'\"><v-icon>far fa-times-circle</v-icon></div>\n                                <div v-if=\"item.valid === 'loading'\"><v-icon>fas fa-circle-notch fa-spin</v-icon></div>\n                            </v-flex>\n                        </v-card-title>\n                        <v-card-text  class=\"text\">\n                            <div>ID {{ item.id}}</div>\n                            <div>Hash {{ item.hash }}</div><br>\n                            <div>Checksum {{item.checksum}}</div>\n                            <div>Schema {{item.schema}}</div>\n                            <div>Signature {{item.signature}}</div>\n\n                            <v-alert\n                                     :value=\"true\"\n                                     v-model=\"item.validationError\"\n                                     dismissible\n                                     type=\"error\"\n                            >Validation failed, please revalidate\n                            </v-alert>\n                        </v-card-text>\n                        <v-card-actions class=\"buttons\">\n                            <div class=\"button-wrapper\"><v-btn @click=\"validateSingleDoc(item.id)\"\n                                    flat color=\"orange\">Validate</v-btn></div>\n                        </v-card-actions>\n                    </v-card>\n                </v-flex>\n                <v-flex style=\"text-align: center\">\n                    <div v-if=\"showLoader\"><v-icon>fas fa-circle-notch fa-spin</v-icon></div>\n                </v-flex>\n            </v-layout>\n        </v-container>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    export default {\n        data() {\n            return {\n                feedItems: [],\n                feedLoadingError: '',\n                feedCounter: 5,\n                page: 1,\n                url: 'http://fe-test.guardtime.com/documents',\n                alert: true,\n                id: '',\n                showLoader: false\n            }\n        },\n        methods: {\n            getFeed(state) {\n                this.feedLoadingError = '';\n                // error msg will appear, if feed not loaded after 3 sec\n                setTimeout(this.feedErrorHandling, 3000);\n                this.showLoader = true\n\n                axios.get(this.url + '?perPage=5&page=' + this.page)\n                .then((res) => {\n                    this.showLoader = false\n                    this.feedItems = this.feedItems.concat(res.data.data);\n                })\n                .catch((error) => {\n                    if (state === true)  {\n                        this.showLoader = false\n                        console.log(error.response.data.error.code)\n                        this.getFeed(false)\n                    }\n                })\n            },\n            async validateSingleDoc(id) {\n                console.log(\"Start:\" + id + \" ********************** \" + new Date());\n                this.id = id;\n                let modes = ['validateChecksum', 'validateSchema', 'validateSignature'];\n                let feedObjectById = what => this.feedItems.find(element => element.id === what);\n\n                if(feedObjectById(id)) {\n                    this.resetValidationValues(feedObjectById(id));\n                    this.$set(feedObjectById(id), 'gotFalseFromResponse',  false);\n                    this.$set(feedObjectById(id), 'docValid',  true);\n                    this.$set(feedObjectById(id), 'validationError',  false);\n\n                    for(let i = 0; i < modes.length; i++) {\n                        this.$set(feedObjectById(id), 'valid',  'loading');\n                        await axios.post(this.url + '/'+ id + '/' + modes[i])\n                            .then((res) => {\n                                if (!res.data.valid) {\n                                    this.$set(feedObjectById(id), 'gotFalseFromResponse',  true);\n                                }\n                                if (i === 'validateChecksum') {\n                                    this.$set(feedObjectById(id), 'checksum',  res.data.valid);\n                                }\n                                else if (i === 'validateSchema') {\n                                    this.$set(feedObjectById(id), 'schema',  res.data.valid);\n                                }\n                                else {\n                                    this.$set(feedObjectById(id), 'signature',  res.data.valid);\n                                }\n                            })\n                            .catch((error) => {\n                                console.log(error.response.data.error.code)\n                                this.$set(feedObjectById(id), 'validationError',  true);\n                            })\n                        if (feedObjectById(id).gotFalseFromResponse) {\n                            this.$set(feedObjectById(id), 'docValid',  false);\n                            break;\n                        }\n                        if(feedObjectById(id).validationError) {\n                            break;\n                        }\n                    }\n                    if (feedObjectById(id).docValid) {\n                        this.$set(feedObjectById(id), 'valid',  'valid');\n                    }\n                    else if (!feedObjectById(id).docValid) {\n                        this.$set(feedObjectById(id), 'valid',  'notvalid');\n                    }\n                    else {\n                        this.resetValidationValues(feedObjectById(id));\n                    }\n                }\n                console.log(\"End:\" + id + \" ********************** \" + new Date());\n            },\n            infiniteScroll() {\n                window.onscroll = () => {\n                    let bottomOfWindow = document.documentElement.scrollTop + window.innerHeight === document.documentElement.offsetHeight;\n\n                    if (bottomOfWindow) {\n                        this.page+=1;\n                        this.getFeed(true)\n                        this.feedCounter+=5;\n                    }\n                };\n            },\n            feedErrorHandling() {\n                this.showLoader = false\n                if (this.feedItems.length < 1) {\n                    this.feedLoadingError = 'Service unavailable.'\n                }\n            },\n            validateAllDocs() {\n                let that = this;\n                this.feedItems.forEach(function(item) {\n                    that.validateSingleDoc(item.id);\n                });\n            },\n            resetValidationValues(obj) {\n                this.$set(obj, 'checksum',  '');\n                this.$set(obj, 'schema',  '');\n                this.$set(obj, 'signature',  '');\n                this.$set(obj, 'valid',  '');\n            }\n    },\n    created() {\n        this.getFeed(true);\n    },\n    mounted() {\n        this.infiniteScroll();\n    }\n};\n</script>\n<style>\n    .text {\n        color: #ddd;\n    }\n    .button-wrapper {\n        text-align: right;\n        width: 100%;\n    }\n    .buttons {\n        background: #455A70;\n    }\n    .v-card__text {\n        flex-wrap: wrap;\n    }\n    .flex .fa-check-circle {\n        color: lime!important;\n    }\n    .flex .fa-times-circle  {\n        color: orangered !important;\n    }\n    .fa-circle-notch {\n        color: cyan!important;\n    }\n</style>\n"],"sourceRoot":"src/views"}]}